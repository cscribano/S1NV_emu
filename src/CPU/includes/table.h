/*S1NV - a Space Invaders arcade emulator written in C++
    Copyright (C) 2018  Carmelo Scribano

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see [http://www.gnu.org/licenses/].
.*/

#ifndef TABLE_H
#define TABLE_H

//#include "cpu.h"
#include "data.h"
#include "arithmetic.h"
#include "branch.h"
#include "control.h"
#include "logical.h"

struct instruction {
	const char *disassembly;
	uint8_t nOperands;
	uint8_t states; //AKA clock cycles
	void(*instr)(I8080& i);
};

const /*struct*/ instruction instructions[256] = {

	{ "NOP", 1, 4, NOP },
	{ "LXI B, %#04X", 3, 10, LXI_BD16 },
	{ "STAX B", 1, 7, STAX_BC },
	{ "INX B", 1, 5, INX_BC },
	{ "INR B", 1, 5, INR_B },
	{ "DCR B", 1, 5, DCR_B },
	{ "MVI B, %#04X", 2, 7, MVI_BD8 },
	{ "RLC", 1, 4, RLC },
	{ "UNDEFINED", 1, 0, NULL },
	{ "DAD B", 1, 10, DAD_BC },
	{ "LDAX B", 1, 7, LDAX_BC },
	{ "DCX B", 1, 5, DCX_BC },
	{ "INR C", 1, 5, INR_C },
	{ "DCR C", 1, 5, DCR_C },
	{ "MVI C, %#04X", 2, 7, MVI_CD8 },
	{ "RRC", 1, 4, RRC },
	{ "UNDEFINED", 1, 0, NULL },
	{ "LXI D, %#04X", 3, 10, LXI_DD16},
	{ "STAX D", 1, 7, STAX_DE },
	{ "INX D", 1, 5, INX_DE },
	{ "INR D", 1, 5, INR_D },
	{ "DCR D", 1, 5, DCR_D },
	{ "MVI D, %#04X", 2, 7, MVI_DD8 },
	{ "RAL", 1, 4, RAL },
	{ "UNDEFINED", 1, 0, NULL },
	{ "DAD D", 1, 10, DAD_DE },
	{ "LDAX D", 1, 7, LDAX_DE },
	{ "DCX D", 1, 5, DCX_DE },
	{ "INR E", 1, 5, INR_E },
	{ "DCR E", 1, 5, DCR_D },
	{ "MVI E,%#04X", 2, 7, MVI_ED8 },
	{ "RAR", 1, 4, RAR },
	{ "RIM", 1, 0, NULL }, //?
	{ "LXI H, %#04X", 3, 10, LXI_HD16 },
	{ "SHLD %#04X", 3, 16, SHLD },
	{ "INX H", 1, 5, INX_HL },
	{ "INR H", 1, 5, INR_H },
	{ "DCR H", 1, 5, DCR_H },
	{ "MVI H, %#04X", 2, 7, MVI_HD8 },
	{ "DAA", 1, 4, DAA },
	{ "UNDEFINED", 1, 0, NULL },
	{ "DAD H", 1, 10, DAD_HL },
	{ "LHLD %#04X", 3, 16, LHLD },
	{ "DCX H", 1, 5, DCX_HL },
	{ "INR L", 1, 5, INR_L },
	{ "DCR L", 1, 5, DCR_L },
	{ "MVI L, %#04X", 2, 7, MVI_LD8 },
	{ "CMA", 1, 4, CMA },
	{ "SIM", 1, 0, NULL },  //?
	{ "LXI SP, %#04X", 3, 10,  LXI_SD16},
	{ "STA %#04X", 3, 13, STA },
	{ "INX SP", 1, 5, INX_SP },
	{ "INR M", 1, 10, INR_M },
	{ "DCR M", 1, 10, DCR_M },
	{ "MVI M, %#04X", 2, 10, MVI_M_D8 },
	{ "STC", 1, 4, STC },
	{ "UNDEFINED", 1, 0, NULL },
	{ "DAD SP", 1, 10, DAD_SP },
	{ "LDA %#04X", 3, 13, LDA },
	{ "DCX SP", 1, 5, DCX_SP },
	{ "INR A", 1, 5, INR_A },
	{ "DCR A", 1, 5, DCR_A },
	{ "MVI A, %#04X", 2, 7, MVI_AD8 },
	{ "CMC", 1, 4, CMC },
	{ "MOV B,B", 1, 5, MOV_BB }, //0X40
	{ "MOV B,C", 1, 5, MOV_BC },
	{ "MOV B,D", 1, 5, MOV_BD },
	{ "MOV B,E", 1, 5, MOV_BE },
	{ "MOV B,H", 1, 5, MOV_BH },
	{ "MOV B,L", 1, 5, MOV_BL },
	{ "MOV B,M", 1, 7, MOV_BM },//0X46
	{ "MOV B,A", 1, 5, MOV_BA }, //0X47
	{ "MOV C,B", 1, 5, MOV_CB },
	{ "MOV C,C", 1, 5, MOV_CC },
	{ "MOV C,D", 1, 5, MOV_CD },
	{ "MOV C,E", 1, 5, MOV_CE },
	{ "MOV C,H", 1, 5, MOV_CH },
	{ "MOV C,L", 1, 5, MOV_CL },
	{ "MOV c,M", 1, 7, MOV_CM },//0X4E
	{ "MOV C,A", 1, 5, MOV_CA }, //0X4F
	{ "MOV D,B", 1, 5, MOV_DB },
	{ "MOV D,C", 1, 5, MOV_DC },
	{ "MOV D,D", 1, 5, MOV_DD },
	{ "MOV D,E", 1, 5, MOV_DE },
	{ "MOV D,H", 1, 5, MOV_DH },
	{ "MOV D,L", 1, 5, MOV_DL },
	{ "MOV D,M", 1, 7, MOV_DM },//0X56
	{ "MOV D,A", 1, 5, MOV_DA },
	{ "MOV E,B", 1, 5, MOV_EB },
	{ "MOV E,C", 1, 5, MOV_EC },
	{ "MOV E,D", 1, 5, MOV_ED },
	{ "MOV E,E", 1, 5, MOV_EE },
	{ "MOV E,H", 1, 5, MOV_EH },
	{ "MOV E,L", 1, 5, MOV_EL },
	{ "MOV E,M", 1, 7, MOV_EM },//0X5E
	{ "MOV E,A", 1, 5, MOV_EA },
	{ "MOV H,B", 1, 5, MOV_HB },
	{ "MOV H,C", 1, 5, MOV_HC },
	{ "MOV H,D", 1, 5, MOV_HD },
	{ "MOV H,E", 1, 5, MOV_HE },
	{ "MOV H,H", 1, 5, MOV_HH },
	{ "MOV H,L", 1, 5, MOV_HL },
	{ "MOV H,M", 1, 7, MOV_HM },//0X66
	{ "MOV H,A", 1, 5, MOV_HA },
	{ "MOV L,B", 1, 5, MOV_LB },
	{ "MOV L,C", 1, 5, MOV_LC },
	{ "MOV L,D", 1, 5, MOV_LD },
	{ "MOV L,E", 1, 5, MOV_LE },
	{ "MOV L,H", 1, 5, MOV_LH },
	{ "MOV L,E", 1, 5, MOV_LL },
	{ "MOV L,H", 1, 5, MOV_LM },
	{ "MOV L,A", 1, 5, MOV_LA }, //0x6F------ (nonè veramente 6F!!!)
	{ "MOV M,B", 1, 7, MOV_MB },
	{ "MOV M,C", 1, 7, MOV_MC },
	{ "MOV M,D", 1, 7, MOV_MD },
	{ "MOV M,E", 1, 7, MOV_ME },
	{ "MOV M,H", 1, 7, MOV_MH },
	{ "MOV M,L", 1, 7, MOV_ML },
	{ "HLT", 1, 7, HALT }, //SPECIAL 0X76
	{ "MOV M,A", 1, 7, MOV_MA },
	{ "MOV A,B", 1, 5, MOV_AB }, //0X78
	{ "MOV A,C", 1, 5, MOV_AC },
	{ "MOV A,D", 1, 5, MOV_AD },
	{ "MOV A,E", 1, 5, MOV_AE },
	{ "MOV A,H", 1, 5, MOV_AH },
	{ "MOV A,L", 1, 5, MOV_AL },
	{ "MOV A,M", 1, 7, MOV_AM },//0x7E
	{ "MOV A,A", 1, 5, MOV_AA }, //0X7F
	{ "ADD B", 1, 4, ADD_B },
	{ "ADD C", 1, 4, ADD_C },
	{ "ADD D", 1, 4, ADD_D },
	{ "ADD E", 1, 4, ADD_E },
	{ "ADD H", 1, 4, ADD_H },
	{ "ADD L", 1, 4, ADD_L },
	{ "ADD M", 1, 7, ADD_M },
	{ "ADD A", 1, 4, ADD_A },
	{ "ADC B", 1, 4, ADC_B },
	{ "ADC C", 1, 4, ADC_C },
	{ "ADC D", 1, 4, ADC_D },
	{ "ADC E", 1, 4, ADC_E },
	{ "ADC H", 1, 4, ADC_H },
	{ "ADC L", 1, 4, ADC_L },
	{ "ADC M", 1, 7, ADC_M },
	{ "ADC A", 1, 4, ADC_A },
	{ "SUB B", 1, 4, SUB_B },
	{ "SUB C", 1, 4, SUB_C },
	{ "SUB D", 1, 4, SUB_D },
	{ "SUB E", 1, 4, SUB_E },
	{ "SUB H", 1, 4, SUB_H },
	{ "SUB L", 1, 4, SUB_L },
	{ "SUB M", 1, 7, SUB_M },
	{ "SUB A", 1, 4, SUB_A },
	{ "SBB B", 1, 4, SBB_B },
	{ "SBB C", 1, 4, SBB_C },
	{ "SBB D", 1, 4, SBB_D },
	{ "SBB E", 1, 4, SBB_E },
	{ "SBB H", 1, 4, SBB_H },
	{ "SBB L", 1, 4, SBB_L },
	{ "SBB M", 1, 7, SBB_M },
	{ "SBB A", 1, 4, SBB_A },
	{ "ANA B", 1, 4, ANA_B },
	{ "ANA C", 1, 4, ANA_C },
	{ "ANA D", 1, 4, ANA_D },
	{ "ANA E", 1, 4, ANA_E },
	{ "ANA H", 1, 4, ANA_H },
	{ "ANA L", 1, 4, ANA_L },
	{ "ANA M", 1, 7, ANA_M },
	{ "ANA A", 1, 4, ANA_A },
	{ "XRA B", 1, 4, XRA_B },
	{ "XRA C", 1, 4, XRA_C },
	{ "XRA D", 1, 4, XRA_D },
	{ "XRA E", 1, 4, XRA_E },
	{ "XRA H", 1, 4, XRA_H },
	{ "XRA L", 1, 4, XRA_L },
	{ "XRA M", 1, 7, XRA_M },
	{ "XRA A", 1, 4, XRA_A },
	{ "ORA B", 1, 4, ORA_B },
	{ "ORA C", 1, 4, ORA_C },
	{ "ORA D", 1, 4, ORA_D },
	{ "ORA E", 1, 4, ORA_E },
	{ "ORA H", 1, 4, ORA_H },
	{ "ORA L", 1, 4, ORA_L },
	{ "ORA M", 1, 7, ORA_M },
	{ "ORA A", 1, 4, ORA_A },
	{ "CMP B", 1, 4, CMP_B },
	{ "CMP C", 1, 4, CMP_C },
	{ "CMP D", 1, 4, CMP_D },
	{ "CMP E", 1, 4, CMP_E },
	{ "CMP H", 1, 4, CMP_H },
	{ "CMP L", 1, 4, CMP_L },
	{ "CMP M", 1, 7, CMP_M },
	{ "CMP A", 1, 4, CMP_A },
	{ "RNZ", 1, 11, R_NZ },
	{ "POP B", 1, 10, POP_B },
	{ "JNZ %#04X", 3, 10, J_NZ },
	{ "JMP %#04X", 3, 10, JMP },
	{ "CNZ %#04X", 3, 11, C_NZ },
	{ "PUSH B", 1, 11, PUSHB },
	{ "ADI %#04X", 2, 7, ADI },
	{ "RST 0", 1, 11, RST_0 },
	{ "RZ", 1, 11, R_Z },
	{ "RET", 1, 0, RET },
	{ "JZ %#04X", 3, 10, J_Z },
	{ "UNDEFINED", 1, 0, NULL },
	{ "CZ %#04X", 3, 11, C_Z },
	{ "CALL %#04X", 3, 17, CALL },
	{ "ACI %#04X", 2, 7, ACI },
	{ "RST 1", 1, 11, RST_1 },
	{ "RNC", 1, 11, R_NC },
	{ "POP D", 1, 10, POP_D },
	{ "JNC %#04X", 3, 10, J_NC },
	{ "OUT %#04X", 2, 10, OUT },
	{ "CNC %#04X", 3, 11, C_NC },
	{ "PUSH D", 1, 11, PUSHD },
	{ "SUI %#04X", 2, 7, SUI },
	{ "RST 2", 1, 11, RST_2 },
	{ "RC", 1, 11, R_C },
	{ "UNDEFINED", 1, 0, NULL },
	{ "JC %#04X", 3, 10, J_C },
	{ "IN %#04X", 2, 10, IN },
	{ "CC %#04X", 3, 11, C_C },
	{ "UNDEFINED", 1, 0, NULL },
	{ "SBI %#04X", 2, 7, SBI },
	{ "RST 3", 1, 11, RST_3 },
	{ "RPO", 1, 11, R_PO },
	{ "POP H", 1, 10, POP_H },
	{ "JPO %#04X", 3, 10, J_PO },
	{ "XTHL", 1, 18, XTHL },
	{ "CPO %#04X", 3, 11, C_PO },
	{ "PUSH H", 1, 11, PUSHH },
	{ "ANI %#04X", 2, 7, ANI },
	{ "RST 4", 1, 11, RST_4 },
	{ "RPE", 1, 11, R_PE },
	{ "PCHL", 1, 5, PCHL },
	{ "JPE %#04X", 3, 10, J_PE },
	{ "XCHG", 1, 4, XCHG },
	{ "CPE %#04X", 3, 11, C_PE },
	{ "UNDEFINED", 1, 0, NULL },
	{ "XRI %#04X", 2, 7, XRI },
	{ "RST 5", 1, 11, RST_5 },
	{ "RP", 1, 11, R_P },
	{ "POP PSW", 1, 10, POP_PSW },
	{ "JP %#04X", 3, 10, J_P },
	{ "DI", 1, 4, DI },
	{ "CP %#04X", 3, 11, C_P },
	{ "PUSH PSW", 1, 11, PUSH_PSW },
	{ "ORI %#04X", 2, 7, ORI },
	{ "RST 6", 1, 11, RST_6 },
	{ "RM", 1, 11, R_M },
	{ "SPHL", 1, 5, SPHL },
	{ "JM %#04X", 3, 10, J_M },
	{ "EI", 1, 4, EI },
	{ "CM %#04X", 3, 11, C_M },
	{ "UNDEFINED", 1, 0, NULL },
	{ "CPI %#04X", 2, 7, CPI },
	{ "RST 7", 1, 11, RST_7 },
};
#endif // !TABLE_H
